{"version":3,"sources":["hooks/useLazyImage.js","mappers/mapTime.js","selectors/selectFields.js","services/hacker-news-api.js","components/Story/StoryStyles.js","components/Story/Story.js","hooks/useStoryIdsFetch.js","container/Stories/StoriesStyles.js","container/Stories/Stories.js","hooks/useInfiniteScroll.js","constants/index.js","App.js","index.js"],"names":["useLazyImage","observerRef","useRef","useEffect","observer","current","disconnect","useCallback","node","IntersectionObserver","entries","forEach","e","intersectionRatio","currentImg","target","newImgSrc","dataset","src","console","warn","observe","mapTime","timestamp","seconds","Math","floor","Date","interval","selectFields","id","by","url","time","title","baseUrl","storiesUrl","storyUrl","getStory","storyId","a","axios","get","then","data","result","show","keyframes","S","StoryWrapper","styled","section","StoryTitle","h1","StoryMeta","div","StoryUrl","StoryMetaElement","span","props","color","StoryImage","img","Story","useState","story","setStory","imgRef","data-testid","href","rel","ref","alt","data-src","data-lazy","width","height","StoryMemonize","React","memo","ACTIONS","reducer","state","action","type","loading","payload","useStoryIdsFetch","useReducer","dispatch","res","catch","error","GlobalStyle","createGlobalStyle","StoriesContainerWrapper","main","StoriesContainer","storyIds","count","setLoading","setCount","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","c","addEventListener","removeEventListener","useInfiniteScroll","maxStories","data-test-id","slice","map","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fcd47953.chunk.js","sourcesContent":["/* eslint no-console: [\"error\", { allow: [\"warn\", \"error\"] }] */\nimport { useEffect, useRef, useCallback } from 'react';\n\nconst useLazyImage = () => {\n  const observerRef = useRef(null);\n\n  useEffect(\n    () => () => {\n      const observer = observerRef.current;\n      if (observer) {\n        observer.disconnect();\n      }\n    },\n    []\n  );\n\n  const refCallBack = useCallback((node) => {\n    function getObserver() {\n      if (!observerRef.current) {\n        observerRef.current = new IntersectionObserver((entries) => {\n          entries.forEach((e) => {\n            if (e.intersectionRatio > 0) {\n              const currentImg = e.target;\n              const newImgSrc = currentImg.dataset.src;\n\n              if (!newImgSrc) {\n                console.warn('not data-src attribute');\n              } else {\n                currentImg.src = newImgSrc;\n              }\n            }\n          });\n        });\n      }\n      return observerRef.current;\n    }\n\n    const observer = getObserver();\n    observer.disconnect();\n\n    if (node) {\n      observer.observe(node);\n    }\n  }, []);\n\n  return [refCallBack];\n};\n\nexport default useLazyImage;\n","export const mapTime = (timestamp) => {\n  const seconds = Math.floor((new Date() - timestamp * 1000) / 1000);\n\n  let interval = Math.floor(seconds / 31536000);\n\n  if (interval > 1) {\n    return `${interval} years`;\n  }\n  interval = Math.floor(seconds / 2592000);\n\n  if (interval > 1) {\n    return `${interval} months`;\n  }\n  interval = Math.floor(seconds / 86400);\n\n  if (interval > 1) {\n    return `${interval} days`;\n  }\n  interval = Math.floor(seconds / 3600);\n\n  if (interval > 1) {\n    return `${interval} hours`;\n  }\n  interval = Math.floor(seconds / 60);\n\n  if (interval > 1) {\n    return `${interval} minutes`;\n  }\n\n  return `${Math.floor(seconds)} seconds`;\n};\n","export const selectFields = ({ id, by, url, time, title }) => ({\n  id,\n  by,\n  url,\n  time,\n  title,\n});\n","import axios from 'axios';\nimport { selectFields } from '../selectors/selectFields';\n\nexport const baseUrl = 'https://hacker-news.firebaseio.com/v0/';\nexport const storiesUrl = `${baseUrl}newstories.json`;\nexport const storyUrl = `${baseUrl}item/`;\n\nexport const getStory = async (storyId) => {\n  const result = await axios\n    .get(`${storyUrl}${storyId}.json`)\n    .then(({ data }) => data && selectFields(data));\n\n  return result;\n};\n\nexport const getStoryIds = () => axios.get(storiesUrl).then(({ data }) => data);\n","import styled, { keyframes } from 'styled-components';\n\nconst show = keyframes`\n    0% {\n        opacity: 0;\n    }\n\n    80% {\n    }\n\n    100% {\n        opacity: 1;\n    }\n`;\n\nconst StoryWrapper = styled.section`\n  padding-top: 10px;\n  margin-bottom: 20px;\n  border-top: 1px solid #cccccc;\n  animation: ${show};\n  animation-duration: 1s;\n  animation-timing-function: ease-out;\n  a {\n    color: #2e2e2c;\n    text-decoration: none;\n  }\n`;\n\nconst StoryTitle = styled.h1`\n  margin-bottom: 5px;\n  font-size: 35px;\n  line-height: 1.8;\n  margin: 0;\n  text-decoration: none;\n`;\n\nconst StoryMeta = styled.div`\n  display: flex;\n\n  flex-direction: column;\n  font-style: italic;\n\n  > span:first-child {\n    margin-right: 10px;\n    margin-top: 15px;\n  }\n\n  > span {\n    margin-top: 5px;\n  }\n\n  .story__meta-bold {\n    font-weight: bold;\n  }\n`;\n\nconst StoryUrl = styled.div`\n  font-style: italic;\n`;\n\nconst StoryMetaElement = styled.span`\n  font-weight: bold;\n  color: ${(props) => props.color || 'red'};\n`;\n\nconst StoryImage = styled.img`\n  max-width: 100%;\n  object-fit: cover;\n  min-height: 300px;\n  border: 1px solid lightgray;\n`;\n\nexport const S = {\n  StoryWrapper,\n  StoryTitle,\n  StoryMeta,\n  StoryUrl,\n  StoryMetaElement,\n  StoryImage,\n};\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport useLazyImage from '../../hooks/useLazyImage';\nimport { mapTime } from '../../mappers/mapTime';\nimport { getStory } from '../../services/hacker-news-api';\nimport { S } from './StoryStyles';\n\nexport const Story = ({ storyId }) => {\n  const [story, setStory] = useState(null);\n  const [imgRef] = useLazyImage();\n\n  useEffect(() => {\n    getStory(storyId).then((data) => data && setStory(data));\n  }, [storyId]);\n\n  return story ? (\n    <S.StoryWrapper data-testid=\"story\">\n      <a href={story.url} target=\"_blank\" rel=\"noreferrer\">\n        <S.StoryTitle>{story.title}</S.StoryTitle>\n        <S.StoryImage\n          ref={imgRef}\n          alt={story.title}\n          data-src={`https://picsum.photos/900/300?random=${storyId}`}\n          data-lazy=\"true\"\n          src=\"https://via.placeholder.com/900x300?text=Loading...\"\n          width=\"900\"\n          height=\"300\"\n        />\n        <S.StoryMeta>\n          <span data-testid=\"story-by\">\n            <S.StoryMetaElement color=\"#000\">By: </S.StoryMetaElement>\n            {story.by}\n          </span>\n          <span data-testid=\"story-time\">\n            <S.StoryMetaElement color=\"#000\">Posted: </S.StoryMetaElement>\n            {mapTime(story.time)}\n          </span>\n          <span data-testid=\"story-url\">\n            <S.StoryMetaElement color=\"#000\">Url: </S.StoryMetaElement>\n            {story.url}\n          </span>\n        </S.StoryMeta>\n      </a>\n    </S.StoryWrapper>\n  ) : null;\n};\n\nexport const StoryMemonize = React.memo(Story);\n\nStory.propTypes = {\n  storyId: PropTypes.number.isRequired,\n};\n","import { useEffect, useReducer } from 'react';\nimport { getStoryIds } from '../services/hacker-news-api';\n\nconst ACTIONS = {\n  MAKE_REQUEST: 'make-request',\n  GET_DATA: 'get-data',\n  ERROR: 'error',\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.MAKE_REQUEST:\n      return { loading: true, result: [] };\n    case ACTIONS.GET_DATA:\n      return { ...state, loading: false, result: action.payload.result };\n    default:\n      return state;\n  }\n}\n\nconst useStoryIdsFetch = () => {\n  const [state, dispatch] = useReducer(reducer, { result: [], loading: true });\n\n  useEffect(() => {\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\n    getStoryIds()\n      .then((res) => {\n        dispatch({ type: ACTIONS.GET_DATA, payload: { result: res } });\n      })\n      .catch((e) => {\n        dispatch({ type: ACTIONS.ERROR, payload: { error: e } });\n      });\n  }, []);\n  return state;\n};\n\nexport default useStoryIdsFetch;\n","import styled, { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html {\n    -webkit-box-sizing: border-box;\n            box-sizing: border-box;\n  }\n  *, *:before, *:after {\n    -webkit-box-sizing: inherit;\n            box-sizing: inherit;\n  }\n  body {\n    margin: 0;\n    padding: 0;\n    line-height: 1;\n    color: #202020;\n    background-color: #fafafe;\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 16px;\n  }\n  ul {\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const StoriesContainerWrapper = styled.main`\n  max-width: 900px;\n  padding: 20px 15px;\n  margin: 0 auto;\n  > h1 {\n    font-size: 40px;\n  }\n`;\n","import React from 'react';\nimport { StoryMemonize } from '../../components/Story/Story';\nimport { STORY_INCREMENT } from '../../constants';\nimport { useInfiniteScroll } from '../../hooks/useInfiniteScroll';\nimport useStoryIdsFetch from '../../hooks/useStoryIdsFetch';\nimport { GlobalStyle, StoriesContainerWrapper } from './StoriesStyles';\n\nexport const StoriesContainer = () => {\n  const { loading, result: storyIds } = useStoryIdsFetch();\n  const { count } = useInfiniteScroll();\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  const maxStories = count * STORY_INCREMENT;\n  return (\n    <>\n      <GlobalStyle />\n      <StoriesContainerWrapper data-test-id=\"stories-container\">\n        <h1>Hacker News API</h1>\n        {storyIds.slice(0, maxStories).map((storyId) => (\n          <StoryMemonize key={storyId} storyId={storyId} />\n        ))}\n      </StoriesContainerWrapper>\n    </>\n  );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from 'react';\n\nexport const useInfiniteScroll = () => {\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState(1);\n\n  const handleScroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n        document.documentElement.offsetHeight ||\n      loading\n    ) {\n      return false;\n    }\n    setLoading(true);\n    return true;\n  };\n\n  useEffect(() => {\n    if (!loading) return;\n\n    setCount((c) => c + 1);\n    setLoading(false);\n  }, [loading]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return { count };\n};\n","export const MAX_STORIES = 500;\nexport const STORY_INCREMENT = 5;\nexport const LAZY_IMG_SELECTOR = '[data-lazy=\"true\"]';\n","import React from 'react';\nimport { StoriesContainer } from './container/Stories/Stories';\n\nexport const App = () => <StoriesContainer />;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}